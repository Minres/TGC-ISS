name: Run architectural test suite on backends
on: push
jobs:
  build_and_test_job:
    name: Build ISS, Setup TGC-COMPLIANCE, Run tests on backends
    runs-on: ubuntu-latest
    container:
      image: git.minres.com/tooling/riscof_sail:latest
      valid_volumes:
        - act-runtime
      volumes:
        - act-runtime:/mnt/act-runtime
    steps:
      - name: Checkout repository code
        run: git clone --recursive -b ${{gitea.ref_name}} https://git.minres.com/TGFS/TGC-ISS.git
      
      - name: Checkout TGC-COMPLIANCE
        run: |
          exit 0
          echo "${{ secrets.ACTRUNNER_PRIVATE_SSHKEY }}" > ssh_key
          chmod 600 ssh_key
          git clone --recursive -c core.sshCommand="/usr/bin/ssh -i  ssh_key -o StrictHostKeyChecking=accept-new" ssh://git@git.minres.com:2221/TGFS/TGC-COMPLIANCE.git
      
      - name: Build tgc-sim executable
        run: |
          exit 0
          conan profile new --detect --force default
          cmake -S TGC-ISS -B TGC-ISS/build -DCMAKE_BUILD_TYPE=Debug -DWITH_ASMJIT=ON -DWITH_TCC=ON -DWITH_LLVM=OFF
          cmake --build TGC-ISS/build -j24

      - name: Test interp backend
        continue-on-error: true
        id: interp
        run: |
          mkdir interp
          python3 TGC-COMPLIANCE/run_act.py -core TGC5C -sim TGC-ISS/build/dbt-rise-tgc/tgc-sim -w interp --dockerless --backend interp

      - name: Test llvm backend
        continue-on-error: true
        id: llvm
        run: |
          mkdir llvm
          echo "llvm takes too long to build, so it is skipped"
          exit 1
          ##run: python3 TGC-COMPLIANCE/run_act.py -core TGC5C -sim TGC-ISS/build/dbt-rise-tgc/tgc-sim -w llvm --dockerless --backend llvm

      - name: Test tcc backend
        continue-on-error: true
        id: tcc
        run: |
          mkdir tcc
          python3 TGC-COMPLIANCE/run_act.py -core TGC5C -sim TGC-ISS/build/dbt-rise-tgc/tgc-sim -w tcc --dockerless --backend tcc

      - name: Test asmjit backend
        continue-on-error: true
        id: asmjit
        run: |
          mkdir asmjit
          python3 TGC-COMPLIANCE/run_act.py -core TGC5C -sim TGC-ISS/build/dbt-rise-tgc/tgc-sim -w asmjit --dockerless --backend asmjit

      - name: Indicate Failure
        run: | 
          echo ${{ failure() }}
          echo ${{steps.*.outcome}}
          echo "Failure detected"
      
      - name: Indicate Failure 2
        if:  ${{ failure() }}
        run: echo "Failure detected"
        
      - name: Indicate Failure 3
        if:  steps.tcc.outcome != 'success'
        run: echo "Failure detected"

      - name: Indicate Failure 4
        if:  steps.*.outcome != 'success'
        run: echo "Failure detected"